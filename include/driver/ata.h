/* SPDX-License-Identifier: GPL-2.0-or-later */
#ifndef _DRIVER_ATA_H_
#define _DRIVER_ATA_H_

enum ata_registers {
    /* command block regs */
    ATA_REG_DATA        = 0x00, /* (RW) PIO data bytes */
    ATA_REG_ERR         = 0x01, /* (RO) used to retrieve any error generated by the last ATA command executed */
    ATA_REG_FEATURE     = 0x01, /* (WO) used to control command specific interface features */
    ATA_REG_NSECT       = 0x02, /* (RW) number of sectors to read/write (0 is a special value) */
    ATA_REG_LBAL        = 0x03, /* (RW) Partial Disk Sector address */
    ATA_REG_LBAM        = 0x04, /* (RW) Partial Disk Sector address */
    ATA_REG_LBAH        = 0x05, /* (RW) Partial Disk Sector address */
    ATA_REG_DEVSEL      = 0x06, /* (RW) used to select a drive and/or head. Supports extra address/flag bits */
    ATA_REG_STATUS      = 0x07, /* (RO) used to read the current status */
    ATA_REG_CMD         = 0x07, /* (WO) used to send ATA commands to the device */

    /* control block regs */
    ATA_REG_ASTAT       = 0x00, /* (RO) alternate status */
    ATA_REG_DEVCTL      = 0x00, /* (WO) device control */
    ATA_REG_DEVADR      = 0x01, /* (RO) device address */
};

#define ATA_DEVSEL_IBM      BIT(7) | BIT(5) /* 512 byte sectors & ECC  */
#define ATA_DEVSEL_LBA      BIT(6)  /* Uses CHS addressing if clear or LBA addressing if set */
#define ATA_DEVSEL_DEV      BIT(4)  /* Selects the drive number */

#define ATA_STATUS_BSY      BIT(7)  /* Busy */
#define ATA_STATUS_DRDY     BIT(6)  /* Drive ready */
#define ATA_STATUS_DF       BIT(5)  /* Drive write fault */
#define ATA_STATUS_DSC      BIT(4)  /* Drive seek complete */
#define ATA_STATUS_DRQ      BIT(3)  /* Data request ready */
#define ATA_STATUS_CORR     BIT(2)  /* Corrected data */
#define ATA_STATUS_IDX      BIT(1)  /* Index */
#define ATA_STATUS_ERR      BIT(0)  /* Error */

#define ATA_ERR_ICRC        BIT(7)  /* ATA ultra DMA bad CRC */
#define ATA_ERR_BBK         BIT(7)  /* ATA bad block */
#define ATA_ERR_UNC         BIT(6)  /* ATA uncorrected error */
#define ATA_ERR_MC          BIT(5)  /* ATA media change */
#define ATA_ERR_IDNF        BIT(4)  /* ATA id not found */
#define ATA_ERR_MCR         BIT(3)  /* ATA media change request */
#define ATA_ERR_ABRT        BIT(2)  /* ATA command aborted */
#define ATA_ERR_TKZNF       BIT(1)  /* ATA track 0 not found */
#define ATA_ERR_AMNF        BIT(0)  /* ATA address mark not found */

#define ATA_DEVCTL_HD15     BIT(3)  /* Bit should always be set to one */
#define ATA_DEVCTL_SRST     BIT(2)  /* Soft reset */
#define ATA_DEVCTL_NIEN     BIT(1)  /* Disable interrupts */

enum ata_command {
    ATA_CMD_NOP                                     = 0x00,
    ATA_CMD_CFA_RESERVED0                           = 0X03,
    ATA_CMD_DATA_SET_MANAGEMENT                     = 0x06,
    ATA_CMD_DEVICE_RESET                            = 0x08,
    ATA_CMD_REQUEST_SENSE                           = 0x0B,
    ATA_CMD_RECALIBRATE                             = 0x10,
    ATA_CMD_READ_SECTORS_WITH_RETRY                 = 0x20,
    ATA_CMD_READ_SECTORS_WITHOUT_RETRY              = 0x21,
    ATA_CMD_READ_LONG_WITH_RETRY                    = 0x22,
    ATA_CMD_READ_LONG_WITHOUT_RETRY                 = 0x23,
    ATA_CMD_READ_SECTORS_EXT                        = 0x24,
    ATA_CMD_READ_DMA_EXT                            = 0x25,
    ATA_CMD_READ_DMA_QUEUED_EXT                     = 0x26,
    ATA_CMD_READ_NATIVE_MAX_ADDRESS_EXT             = 0x27,
    ATA_CMD_READ_MULTIPLE_EXT                       = 0x29,
    ATA_CMD_READ_STREAM_DMA                         = 0x2A,
    ATA_CMD_READ_STREAM                             = 0x2B,
    ATA_CMD_READ_LOG_EXT                            = 0x2F,
    ATA_CMD_WRITE_SECTORS_WITH_RETRY                = 0x30,
    ATA_CMD_WRITE_SECTORS_WITHOUT_RETRY             = 0x31,
    ATA_CMD_WRITE_LONG_WITH_RETRY                   = 0x32,
    ATA_CMD_WRITE_LONG_WITHOUT_RETRY                = 0x33,
    ATA_CMD_WRITE_SECTORS_EXT                       = 0x34,
    ATA_CMD_WRITE_DMA_EXT                           = 0x35,
    ATA_CMD_WRITE_DMA_QUEUED_EXT                    = 0x36,
    ATA_CMD_SET_NATIVE_MAX_ADDRESS_EXT              = 0x37,
    ATA_CMD_CFA_RESERVED1                           = 0x38,
    ATA_CMD_WRITE_MULTIPLE_EXT                      = 0x39,
    ATA_CMD_WRITE_STREAM_DMA                        = 0x3A,
    ATA_CMD_WRITE_STREAM                            = 0x3B,
    ATA_CMD_WRITE_VERIFY                            = 0x3C,
    ATA_CMD_WRITE_DMA_FUA_EXT                       = 0x3D,
    ATA_CMD_WRITE_DMA_QUEUED_FUA_EXT                = 0x3E,
    ATA_CMD_WRITE_LOG_EXT                           = 0x3F,
    ATA_CMD_READ_VERIFY_SECTORS_WITH_RETRY          = 0x40,
    ATA_CMD_READ_VERIFY_SECTORS_WITHOUT_RETRY       = 0x41,
    ATA_CMD_READ_VERIFY_SECTORS_EXT                 = 0x42,
    ATA_CMD_Trusted_Non_Data                        = 0x5B,
    ATA_CMD_Trusted_Receive                         = 0x5C,
    ATA_CMD_Trusted_Receive_DMA                     = 0x5D,
    ATA_CMD_Trusted_Send                            = 0x5E,
    ATA_CMD_Trusted_Send_DMA                        = 0x5F,
    ATA_CMD_Read_FPDMA_Queued                       = 0x60,
    ATA_CMD_Write_FPDMA_Queued                      = 0x61,
    ATA_CMD_SATA_Reserved0                          = 0x62,
    ATA_CMD_NCQ_Queue_Management                    = 0x63,
    ATA_CMD_Send_FPDMA_Queued                       = 0x64,
    ATA_CMD_Receive_FPDMA_Queued                    = 0x65,
    ATA_CMD_SATA_Reserved1                          = 0x66,
    ATA_CMD_SATA_Reserved2                          = 0x67,
    ATA_CMD_SEEK                                    = 0x70,
    ATA_CMD_SET_DATETIME_EXT                        = 0x77,
    ATA_CMD_ACCESSIBLE_MAX_ADDRESS_CONFIGURATION    = 0x78,
    ATA_CMD_SMART                                   = 0xB0,
    ATA_CMD_READ_DMA                                = 0xC8,
    ATA_CMD_WRITE_DMA                               = 0xCA,
    ATA_CMD_CACHE_FLUSH                             = 0xE7,
    ATA_CMD_CACHE_FLUSH_EXT                         = 0xEA,
    ATA_CMD_PACKET                                  = 0xA0,
    ATA_CMD_IDENTIFY_PACKET                         = 0xA1,
    ATA_CMD_IDENTIFY                                = 0xEC,
    ATA_CMD_GET_MEDIA_STATUS                        = 0xDA,
    ATA_CMD_ACKNOWLEDGE_MEDIA_CHANGE                = 0xDB,
    ATA_CMD_BOOT_POST_BOOT                          = 0xDC,
    ATA_CMD_BOOT_PRE_BOOT                           = 0xDD,
    ATA_CMD_MEDIA_LOCK                              = 0xDE,
    ATA_CMD_MEDIA_UNLOCK                            = 0xDF,
    ATA_CMD_STANDBY_IMMEDIATE                       = 0xE0,
    ATA_CMD_IDLE_IMMEDIATE                          = 0xE1,
    ATA_CMD_STANDBY                                 = 0xE2,
    ATA_CMD_IDLE                                    = 0xE3,
    ATA_CMD_READ_BUFFER                             = 0xE4,
    ATA_CMD_CHECK_POWER_MODE                        = 0xE5,
    ATA_CMD_SLEEP                                   = 0xE6,
    ATA_CMD_FLUSH_CACHE                             = 0xE7,
    ATA_CMD_WRITE_BUFFER                            = 0xE8,
    ATA_CMD_READ_BUFFER_DMA                         = 0xE9,
    ATA_CMD_FLUSH_CACHE_EXT                         = 0xEA,
    ATA_CMD_WRITE_BUFFER_DMA                        = 0xEB,
    ATA_CMD_IDENTIFY_DEVICE                         = 0xEC,
    ATA_CMD_MEDIA_EJECT                             = 0xED,
    ATA_CMD_IDENTIFY_DEVICE_DMA                     = 0xEE,
    ATA_CMD_SET_FEATURES                            = 0xEF,
    ATA_CMD_VENDOR_SPECIFIC                         = 0xF0,
    ATA_CMD_SECURITY_SET_PASSWORD                   = 0xF1,
    ATA_CMD_SECURITY_UNLOCK                         = 0xF2,
    ATA_CMD_SECURITY_ERASE_PREPARE                  = 0xF3,
    ATA_CMD_SECURITY_ERASE_UNIT                     = 0xF4,
    ATA_CMD_SECURITY_FREEZE_LOCK                    = 0xF5,
    ATA_CMD_SECURITY_DISABLE_PASSWORD               = 0xF6,
    ATA_CMD_READ_NATIVE_MAX_ADDRESS                 = 0xF8,
    ATA_CMD_SET_MAX_ADDRESS                         = 0xF9,
    ATA_CMD_VENDOR0                                 = 0xFA,
    ATA_CMD_VENDOR1                                 = 0xFB,
    ATA_CMD_VENDOR2                                 = 0xFC,
    ATA_CMD_VENDOR3                                 = 0xFD,
    ATA_CMD_VENDOR4                                 = 0xFE,
    ATA_CMD_VENDOR5                                 = 0xFF,
};

#endif /* _DRIVER_ATA_H_ */
